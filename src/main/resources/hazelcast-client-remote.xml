<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Copyright (c) 2008-2018, Hazelcast, Inc. All Rights Reserved. ~ ~ 
	Licensed under the Apache License, Version 2.0 (the "License"); ~ you may 
	not use this file except in compliance with the License. ~ You may obtain 
	a copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 ~ 
	~ Unless required by applicable law or agreed to in writing, software ~ distributed 
	under the License is distributed on an "AS IS" BASIS, ~ WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. ~ See the License for 
	the specific language governing permissions and ~ limitations under the License. -->
<hazelcast-client
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.hazelcast.com/schema/client-config
                               http://www.hazelcast.com/schema/client-config/hazelcast-client-config-4.0.xsd"
        xmlns="http://www.hazelcast.com/schema/client-config">

    <user-code-deployment enabled="true">
        <classNames>
            <className>com.sorint.demo.service.remote.ArticleCallable</className>
            <className>com.sorint.demo.service.remote.TicketCallable</className>
        </classNames>

    </user-code-deployment>

    <network>
        <smart-routing>true</smart-routing>
        <kubernetes enabled="true">
            <service-dns>hazelcast-service.mdv1-cdc.svc.cluster.local</service-dns>
            <!--                    <service-dns>hazelcast-service-mdv1-cdc.apps.7919-681139.cor00005-2.cna.ukcloud.com</service-dns>-->
            <!--                    <service-dns>hazelcast-lb-mdv1-cdc.apps.7919-681139.cor00005-2.cna.ukcloud.com</service-dns>-->
            <!--                    <service-dns>hazelcast-lb-mdv1-cdc.apps.7919-681139.cor00005-2.cna.ukcloud.com </service-dns>-->
            <api-token>
                ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkluRnVhUzA1VVdaTVdHRm1WVXBuYkRSWU4wWXdUazA0TTJRNFZHVkpWMmMwU0dkc09GWTVNSFJ3TlUwaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUp0WkhZeExXTmtZeUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVmpjbVYwTG01aGJXVWlPaUprWldaaGRXeDBMWFJ2YTJWdUxUWjZkM0U0SWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXpaWEoyYVdObExXRmpZMjkxYm5RdWJtRnRaU0k2SW1SbFptRjFiSFFpTENKcmRXSmxjbTVsZEdWekxtbHZMM05sY25acFkyVmhZMk52ZFc1MEwzTmxjblpwWTJVdFlXTmpiM1Z1ZEM1MWFXUWlPaUpqWmpnMVltWTJNUzAwTUdZd0xUUmpZamd0WVdReFppMDJPV1psWVdSaVpXRXhNR0lpTENKemRXSWlPaUp6ZVhOMFpXMDZjMlZ5ZG1salpXRmpZMjkxYm5RNmJXUjJNUzFqWkdNNlpHVm1ZWFZzZENKOS5zUHc1V21CWFFkdXlIV2lLcS1CSDhXWDRzNmtXREtCcVh1VlFTdjBZcGtVNG5NWUNyY0VBRV9Mcl95cFR2ZTNOcG5xVndaU3VfZWU5SGZDcFVMWXB2SmQweUg0ZjBVN1gxakl0Wnd1anBhNld5Qi1XQXl3ay1TZFdlTW10NmJoRXMxYkFRbUpKWTdkRHE0WUR2ZVZxb1lHVzJEN3ZJVE5GTUdCN3Q4RllsNWY1bXpjUU9zaS1zVkhMVXRzTW1QUjBoSDVNNV91RV9neHlHcFlwWVdaMHRSVHVabnU4SFNEaTdBOHJBakVtZWsteWYzUWNpNWhMRmRJOGxQbml1VmM4MUhPWDk0Sk13OTg3cTVHUXVQNk5NdEd0RHZEdTRSTFhOblhLMTNmeWJpVDdRQkFLdTdqek5aWlZQUHBZTGVfWDdBOEtCN1RYTXZkdzZaUEc4WVEwcGc=
            </api-token>
            <ca-certificate>
                LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJQ2dCcEMrWHMxQ2t3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpBd05EQTNNVFF3TVRJeldoY05NekF3TkRBMU1UUXdNVEl6V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHZaN0NrU0dvRytoNkN1Z25PQ09iVEt2Mm1DVndNLwpQRUdYakoxTUhHeFluR1E2emtPWkhMZktsakoyeVNpZzltd2FEUWpuRnVnN1RZNUNuN2JqM2ZGVTRBQytCb2gyCkFSYTJmM2xuYWhGYUNDcVJSdUJIYzRPRDFQeUMrTnlUbEF3amRIeDQ5UnFLdkV2K0RZclI0aHZhK3VSZVpOQ2kKLzNOdXVWNi8yTTcwZ2o5RzdMdWFlMUxnUlFTWU9ES21XYjJaeDVPazV0U2RQcFppTGJBMnhUU25vK2pqVE56dQpMZjk0RUJ3N0VQQnFmMEpzdGo3S3JWZHU1MlZTY2xZaXRHR0ltSEMrZ0ZrMTlBZVJVUVN6MVhiM2czTS9YRi9xClBPRG9TOEtOSTZYbmFOT1dFdDE3SnJzVnZOUEFBSWdnSmtMVGd4TFhUc1hNWnNpVmpodzROQUVDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkZJZApWcE05MjVYZ2p2YmRCbTVaWElOQW8rRWtNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFQQjFSN1VQVVBROGRUCkk3eEp6UnJqYnUvZ0Jla1ljVDRyRjJ2ZEFNTmdtbXl0SlpHMGF3Y2lYdVQ1VmhLNktLUERZWUhmWU90RWxIY0YKdVRXSThSSDhueExuV2VoUTVLTWVHMm9sTzdVemY3OXJqaUduTXBaTTZ1NUUxbkRIMktEM05lbDFkNGFtd1pFeQpacDJ1ZUtFMFBlYS85ZkNTQnM1eXV4dldPeUpKTmVpK1NPVFhaVWphYnExTkRSZFdCUzBhNGFRMVhObG4yTm9OCmNrM05qaDc3QkFjVDdlb0paYzNseHpjb0tKQlhpdE9hMXJUVzBDVUljRFM3dTRLeTVtalV4N20wNm0vamE5YlEKRVhFcHpFdGhTdDlycHAwUncvYnZPWElCRkxzZ1dGdTFGU0JlZVFLSDR1bVlCMmRzdnFMQnM4VjdzbnpzOGtVSQpFVnFxY3dBdAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSWVRblJxMTFzLzlRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJd01EUXdOekUwTURFeU1sb1hEVE13TURRd05URTBNREV5TWxvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUExaVVncExmT3ZyUFQKSDZObzl6TTdWSUhnKzBkQmQ4NE03UVV4TjFseXNJTDEwaS9ycWl6bnZJTEZZMGp0T3k4cFZkUHd0YkVWOWhyZQo0UHJxVDNXNjVJb1AwdWZlV1VVM090M2hYWmZtMHlZZzA0bWRuWVpJQUpNeUtFaXlBUmtTdFhuYkRYRUowdHRxClBIWWZkRmNHZnA0SmU2MnBlWitOMmFYS0NjZ0lpTDFqSE5hWC9NOWNQcjY4L2NNZkRZU2doTG1zcEJCUncySC8KU2tnalNhRUNGS3lhUXU2L2xsZFJ3Q3FHV0diTGRjckxob3RuWG81RW1kcEgxRlUzam9CMzFRMVVZR2hjMW9QVApYR1lpVTNkaHJYbHJpL21zOUVyMHhVVlVLVzRZeWZJUDlMWjlaZk95ZnZFckdtL1EwbjJ1bWhEUlJZL08zNTl6ClcxMWlWbXdNS1FJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdvTmliWjY1dFBWdDVBMmtTeEpiZ3FyMTczNHdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQURUaCtCRi9yVVZtaWFjTWZMM3NQVWpRSzllTXkrM3A2MVhPSWptQVBQZEQvY242U3VnTXNUUGVFOEpsCnVjOFpsK3MxbVZQRGd2VTk0b0tkcHpyQytON1hJOWZLVDlUNWw2MkFBd0hhNkpaL0lvbUh6cTVOVjFLZUgzZ0UKWDYzdkRTOTFRcFg0WjRWeVJFeTlWTGlUd3lsSGpONkdhUUxlSlRPR1crZGZNV1hNT3ZseWdNM0tOZXZsaW5FbQpaZ0hFWk9mUmpZakdTUGxPcU4vVnRTTFkyS3ViSmdOL2Voa2VWUHFDLzFza1ZBRllSajhrTjFIbVFUdEpuRDFXClB2QVA4RHI5bWVlNkdwYzVieHdVZEk2cHZFUWhyUkJxZnNjOTVxRGxJYWEweU9tTGpSdG1rdDRMODJ6bTRITDgKcEp6d2JaRXBwdUNZMDNPajJic0xWaGhYUUZrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUVmMDRzaDZWVHN3d0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl3TURRd056RTBNREV5TWxvWERUTXdNRFF3TlRFME1ERXlNbG93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTdrSFFYd1NVTnRwSTJ3bFRNVG8yZHJ4cDJORjUwQTdtaThtZmFpYnRpNlo4THF3dDE4clE5OGh4VDhjeQp5K1A0cUtyT25oYnNsT3dwNWFlZFRoOVlpWkNvUi8ybnpCeUlQNGFSYjZBT2dmbXZGOUJaYjU0L0hGMjdPR045CmZXVVgzUEFuUWtPczY3ZVNuM2ZOR00reXpreUZQakhzdE5YUjRTeEhyMFIxU1lLbWZ4T2d0VmpHUVV6M2grOVYKZ1V2UFVzQ05TR0dBcmExbWtjM20yQVAxZ1RqYlNubmIwQmhyS2QwejZGVkpoL2M0elllVmhLbWV6VmxPRlBFUgp1Z1laN0dBWFM5Z1hScFFuZFQxTi9MYzhmWHBXdkxYTS94ZkdUU0Yrb09GR29aeVdqWHRjbWZPVWZLbVB0OGJyCnpyZEU4QWpjenhSTUxaT3A1VzFjZ0l0RHNRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVZQ29sczJCZE9EbDZQbDVpR0Q2QjkrKzZXU2d3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFT2V3ZGoxZlhKSHhUWlNEUTFiM0lFTUJtL2NIWnFTSzBOaFZnT3lwNWdrCmhleGpZd2U4eFFPWkRzMFhqSVgrWi9uOGlVcnpOZ1NTSVFGbXBEcThaRHNtUXFOYzRNa0c0aDVIZGRzckthMG4KZkQ3QldMOXdJbjRka2l5WjErWlpIMEU4N2dHSENqZklWZW4renQ1QVhvbStUT2xFaWpyeVRtRlhpRVJzanZ2SQpMMWgyYXV5a1QweU9sNEhZQTd2ckRoM3ZZL090M3BXRnphQ05uZ0dHengrTk9YVkM3dmlCR2p4aDdtdUVNdk0yCkJyRElZV3hqeFVYd2hZZitQSU0wT0RBMVM3eTl3YUhqTHZtb2hsUmFrS0lGdEFCd2pSME9ySGpsVG9xSytvODUKUVF2bkhYcEl3NU55VXRCc0czUGN6ZFV3S2RBRmFuOVNCT210eXpsRUtubz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9EWXlOekF4TnpVd0hoY05NakF3TkRBM01UUXpOakUwV2hjTk16QXcKTkRBMU1UUXpOakUxV2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRFl5Ck56QXhOelV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE5JUThWZ0tIeXFSZnAKZU1RbEllWGZYbXVwMDB0dERnL0Z5Ym5Qcm81ZXc1UzN2RmhCTkNPY3A5VnFnOUpMSC80YzJTTGNXQlByYUZRWAo1cWY3elV4MDBNSjF2V0dEQ21NL1pObGxJM0Y5clVnWDZqKzlJUDZ1TWpCVjJJMGZUT0hramNtUXJObEVwL0hHCnlHYVlIdzRtbVNHQUZIY2JPUHZBaTE1RmZxemFsb3ZIZmswYnpwU3duNm9mRGNTb1FjblZPU1JiUDZFMHl6bGUKb0lnN1daS1JEUkpPaVlKY1VYRm1wQUN6SHZ6YmlJMG1NWVEwMldHQTNpcklPZnJYNHY3UWpqdXh6SjRFT003KwpZMElpVnlVbmd3UUphdU90bWUrRy9xWThvcG1ZMGtlTy9XS3V2ZGRFK3RWejFGUG1iUHZ1SENlZUh6eVVMRWtyCjlhOGtnRHcxQWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRQzhnRWpzU3pLbmp2cDB3MXI0Q0l3MzJvSUNEQWZCZ05WSFNNRUdEQVdnQlFDOGdFagpzU3pLbmp2cDB3MXI0Q0l3MzJvSUNEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFQYWlSWVRkV2VsSUYyWG1xCnR3QllZNkQrU1lzbW5wQy90UUpJREhtYnFCOWtOZVFCY0Z5R2ZTemVPNlF0dnBhelRZVExzZmlNKytNVXFWbksKR013RE9VL1F1dmlEWGFvb0lJbldJMUhsSzdIRXFUR1BvSDFzanFpVkFHTUMvdWVaRXJBVVpuZ3V6WWRZcW1Ecgo2ZzhHdXFZWW9IKzJqamtxekRmUkFlUnl6ZjlQSTlCSDQ4clQyVzlMOUdlU3l0TzFtMXNzTWR5dHBVZ0tRanZ1CnRnOFMxeUNJVmlOd08yN1NldFJTaXovdkZ2SFN0TXYwcHZrY21UR2RTZTJXWUM4UlN4RVNwUGRDRjRxMWh2cmYKUVJhajBMakMrVkhaYnBtR2hpNlV3SkxYVVlrNDY1anNyb2JUalBHN0toWFZUMFNDRStTWVJ2MHhYREVRMUkvNAp3aXU5Nmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGdmpDQ0JLYWdBd0lCQWdJU0JNRWd0Tng3TW9YNVZ3VTdtWDQ1all2OE1BMEdDU3FHU0liM0RRRUJDd1VBCk1Fb3hDekFKQmdOVkJBWVRBbFZUTVJZd0ZBWURWUVFLRXcxTVpYUW5jeUJGYm1OeWVYQjBNU013SVFZRFZRUUQKRXhwTVpYUW5jeUJGYm1OeWVYQjBJRUYxZEdodmNtbDBlU0JZTXpBZUZ3MHlNREE1TWpNeE16TXdNVEJhRncweQpNREV5TWpJeE16TXdNVEJhTURneE5qQTBCZ05WQkFNTUxTb3VZWEJ3Y3k0M09URTVMVFk0TVRFek9TNWpiM0l3Ck1EQXdOUzB5TG1OdVlTNTFhMk5zYjNWa0xtTnZiVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBS0ZlM1NCNjBQN0VEM3FFb01kTkhFdjZibGtkam95MW52ZUQ5RCtCc0RqQnBhWVg4RWpiNi9SSgpNY3JWbWlpczVKUjFzeFhsWE9DanFCQWdpbXNWeXlQMFdGOGQ5MW16YmFORWlVZmVBU3pyOFM5UkhpLzFNbk5JClptZGhOallTRWg5NmNOQm5BL2w1YzVYUU5DWFB3c21nYnVHQkFsTG9ORlBxdkppRU5BeUFwTUhydXNyQ1JvWkQKM0lxa0s0L1I4VmwwVmlIbm42VndPWndMNmttK0ozNVc5MTZlbzgxNy90OUNtdmxxT3NmRGluQkVZSUJXSWFlbApCUXBuaTJZSHp2ckJQNS8vSzVwVHU0dVoxbTVUbUorMlNEcnhETFlpajVkcG5RNjdoL1VLYVBqb3B3OHY2U3BpCmpLVW0wTmRUTGZGelVoejVoV3NnS1Rab3VRTHFUTUVDQXdFQUFhT0NBcTR3Z2dLcU1BNEdBMVVkRHdFQi93UUUKQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJdwpBREFkQmdOVkhRNEVGZ1FVdnIxZmpNTnY1R1dKbGFjVW1qSHJSanVsc0Nnd0h3WURWUjBqQkJnd0ZvQVVxRXBxCll3UjkzYnJtMFRtM3BrVmw3L09vN0tFd2J3WUlLd1lCQlFVSEFRRUVZekJoTUM0R0NDc0dBUVVGQnpBQmhpSm8KZEhSd09pOHZiMk56Y0M1cGJuUXRlRE11YkdWMGMyVnVZM0o1Y0hRdWIzSm5NQzhHQ0NzR0FRVUZCekFDaGlObwpkSFJ3T2k4dlkyVnlkQzVwYm5RdGVETXViR1YwYzJWdVkzSjVjSFF1YjNKbkx6QmtCZ05WSFJFRVhUQmJnaTBxCkxtRndjSE11TnpreE9TMDJPREV4TXprdVkyOXlNREF3TURVdE1pNWpibUV1ZFd0amJHOTFaQzVqYjIyQ0ttRncKYVM0M09URTVMVFk0TVRFek9TNWpiM0l3TURBd05TMHlMbU51WVM1MWEyTnNiM1ZrTG1OdmJUQk1CZ05WSFNBRQpSVEJETUFnR0JtZUJEQUVDQVRBM0Jnc3JCZ0VFQVlMZkV3RUJBVEFvTUNZR0NDc0dBUVVGQndJQkZocG9kSFJ3Ck9pOHZZM0J6TG14bGRITmxibU55ZVhCMExtOXlaekNDQVFRR0Npc0dBUVFCMW5rQ0JBSUVnZlVFZ2ZJQThBQjIKQUxJZUJjeUxvczJLSUU2SFp2a3J1WW9sSUdkcjJ2cHc1N0pKVXkzdmk1QmVBQUFCZEx0ZksyWUFBQVFEQUVjdwpSUUloQUt3U2IxbkRIWWdLZERValY0am0wbGs5UFQ3QlpUSjdFZHZMeWk1RVFZbFRBaUFJNFFKa1N2RFNzRHFhCk9ZVzl0aStPeFlCeUNWdk9hakUvUHh6bEUvYmptZ0IyQUc5VGRxd3g4REVaMkprQXBGRVYvM2NWSEJIWkFzRUEKS1FhTnNnaWFOOWtUQUFBQmRMdGZLNVlBQUFRREFFY3dSUUlnWUw3OUlxb2RyWmhyRUY2OUwvSWpqQVhYTVpRVwpFNTZGejJRVHZrVklKWWdDSVFDL21YRFdUNWh4YStsNzFJZVdSWkp2Q2VhZzZWNTk0UGpMZ1YrQjlIVEhpVEFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUZXUlBVOElQOTA1U0VrOVNHeEJjWlVXci9tZmlRNElsaXJKWDNjelYKd05EVllFNTZpcFpaSlkwR3pwc0d1NkVZekdHVk05d0hoM05VcUlxREhMRFo2Q2lERjJqUXE3VTFwRVZDUWN5NgpwOFF0QmpQVGYrTzAyM2JBWHkvY0tVVmZOSWpHZXAwQTh4bS8vOEFhTzNzSnozSVlHMTYyRVc0Ly9BRkVuTGlsCmtoQTBLUGVDS1UyMk5YUnpjN2VMZytWUVpRWVNZNEw4RWJxUFNlektyaGorVUpTejlSSkVaNVBmRE9PMGxoanAKNG51NUpQZlNNcGR3bW0wbEJJTDdMcUtBZVNJVmdvNlBPYnRRb1BLdEFqRS93KzRUb0tGUzdreWg0OWd1bmZBaQorUkkxanBaZkMzMWZBc3FtUmwyN05ERnoxbFlhK1F3Zm1kU2RPTzdlNXBzOTBnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRWtqQ0NBM3FnQXdJQkFnSVFDZ0ZCUWdBQUFWT0ZjMm9MaGV5bkNEQU5CZ2txaGtpRzl3MEJBUXNGQURBLwpNU1F3SWdZRFZRUUtFeHRFYVdkcGRHRnNJRk5wWjI1aGRIVnlaU0JVY25WemRDQkRieTR4RnpBVkJnTlZCQU1UCkRrUlRWQ0JTYjI5MElFTkJJRmd6TUI0WERURTJNRE14TnpFMk5EQTBObG9YRFRJeE1ETXhOekUyTkRBME5sb3cKU2pFTE1Ba0dBMVVFQmhNQ1ZWTXhGakFVQmdOVkJBb1REVXhsZENkeklFVnVZM0o1Y0hReEl6QWhCZ05WQkFNVApHa3hsZENkeklFVnVZM0o1Y0hRZ1FYVjBhRzl5YVhSNUlGZ3pNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFuTk1NOEZybExrZTNjbDAzZzdOb1l6RHExelVtR1NYaHZiNDE4WENTTDdlNFMwRUYKcTZtZU5RaFk3TEVxeEdpSEM2UGpkZVRtODZkaWNicDVnV0FmMTVHYW4vUFFlR2R4eUdrT2xaSFAvdWFaNldBOApTTXgreWsxM0VpU2RSeHRhNjduc0hqY0FISnlzZTZjRjZzNUs2NzFCNVRhWXVjdjliVHlXYU44aktrS1FESVowClo4aC9wWnE0VW1FVUV6OWw2WUtIeTl2NkRsYjJob256aFQrWGhxK3czQnJ2YXcyVkZuM0VLNkJsc3BrRU5uV0EKYTZ4Szh4dVFTWGd2b3BaUEtpQWxLUVRHZE1EUU1jMlBNVGlWRnJxb003aEQ4YkVmd3pCL29ua3hFejB0TnZqagovUEl6YXJrNU1jV3Z4STBOSFdRV002cjZoQ20yMUF2QTJIM0Rrd0lEQVFBQm80SUJmVENDQVhrd0VnWURWUjBUCkFRSC9CQWd3QmdFQi93SUJBREFPQmdOVkhROEJBZjhFQkFNQ0FZWXdmd1lJS3dZQkJRVUhBUUVFY3pCeE1ESUcKQ0NzR0FRVUZCekFCaGlab2RIUndPaTh2YVhOeVp5NTBjblZ6ZEdsa0xtOWpjM0F1YVdSbGJuUnlkWE4wTG1OdgpiVEE3QmdnckJnRUZCUWN3QW9ZdmFIUjBjRG92TDJGd2NITXVhV1JsYm5SeWRYTjBMbU52YlM5eWIyOTBjeTlrCmMzUnliMjkwWTJGNE15NXdOMk13SHdZRFZSMGpCQmd3Rm9BVXhLZXhwSHNzY2ZyYjRVdVFkZi9FRldDRmlSQXcKVkFZRFZSMGdCRTB3U3pBSUJnWm5nUXdCQWdFd1B3WUxLd1lCQkFHQzN4TUJBUUV3TURBdUJnZ3JCZ0VGQlFjQwpBUllpYUhSMGNEb3ZMMk53Y3k1eWIyOTBMWGd4TG14bGRITmxibU55ZVhCMExtOXlaekE4QmdOVkhSOEVOVEF6Ck1ER2dMNkF0aGl0b2RIUndPaTh2WTNKc0xtbGtaVzUwY25WemRDNWpiMjB2UkZOVVVrOVBWRU5CV0RORFVrd3UKWTNKc01CMEdBMVVkRGdRV0JCU29TbXBqQkgzZHV1YlJPYmVtUldYdjg2anNvVEFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQVFFQTNUUFhFZk5qV0RqZEdCWDdDVlcrZGxhNWNFaWxhVWNuZThJa0NKTHhXaDlLRWlrM0pIUlJIR0pvCnVNMlZjR2ZsOTZTOFRpaFJ6WnZvcm9lZDZ0aTZXcUVCbXR6dzNXb2RhdGcrVnlPZXBoNEVZcHIvMXdYS3R4OC8Kd0FwSXZKU3d0bVZpNE1GVTVhTXFyU0RFNmVhNzNNajJ0Y015bzVqTWQ2am1lV1VISzhzby9qb1dVb0hPVWd3dQpYNFBvMVFZeiszZHN6a0RxTXA0ZmtseEJ3WFJzVzEwS1h6UE1UWitzT1BBdmV5eGluZG1qa1c4bEd5K1FzUmxHClBmWitHNlo2aDdtamVtMFkraVdsa1ljVjRQSVdMMWl3Qmk4c2FDYkdTNWpOMnA4TStYK1E3VU5LRWtST2IzTjYKS09xa3FtNTdUSDJIM2VESkFrU25oNi9ETkZ1MFFnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
            </ca-certificate>
            <namespace>mdv1-cdc</namespace>
        </kubernetes>
    </network>
    <connection-strategy async-start="false" reconnect-mode="ON">
        <connection-retry>
            <initial-backoff-millis>1000</initial-backoff-millis>
            <max-backoff-millis>50000</max-backoff-millis>
            <!-- With multiplier 1, initiali-backoff is used throughout retries -->
            <multiplier>1</multiplier>
            <!-- Set cluster-connect-timeout-millis to a large value so that it retries forever -->
            <cluster-connect-timeout-millis>1000000000</cluster-connect-timeout-millis>
            <jitter>0.2</jitter>
        </connection-retry>
    </connection-strategy>
    <serialization>
        <serializers>
            <global-serializer override-java-serialization="false">
                com.sorint.demo.service.data.avro.KryoSerializer
            </global-serializer>
        </serializers>
    </serialization>

</hazelcast-client>
